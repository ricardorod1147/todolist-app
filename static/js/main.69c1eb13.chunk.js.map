{"version":3,"sources":["componentes/Header.jsx","componentes/Loader.jsx","componentes/Todo.jsx","componentes/Menu.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","counter","darkMode","className","Loader","Todo","title","status","handleCompleteTodo","id","onClick","Menu","handleAllView","handleCompletedView","handleResetView","completedList","App","useState","todoList","setTodolist","viewTotal","setViewTotal","viewCompleted","setViewCompleted","viewReset","setviewReset","useEffect","HandleTodoList","a","fetch","response","json","result","resultTodoList","slice","stateVariable","map","todo","completed","length","singleTodo","filter","ele","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69c1eb13.chunk.js","sourcesContent":["import React  from \"react\";\r\n\r\n// COMPONENTS\r\n// import Menu from \"./Menu\";\r\n\r\n//STYLES\r\n\r\nimport \"../styles/Header.styles.css\";\r\n\r\nconst Header = ({counter, darkMode}) => {\r\n\r\n\r\n    return (\r\n    <header className=\"header-container\">\r\n    <h2>ToDO APP</h2>\r\n    </header>\r\n\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Loader = () =>{\r\n    return (\r\n        <div>\r\n            <p>Cargando...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Loader;","import React from 'react'\r\nimport \"../styles/Todo.styles.css\";\r\n\r\nconst Todo = ({title, status , handleCompleteTodo, id}) => {\r\n    return (\r\n        <div className=\"todo-card\">\r\n            <div className=\"todo-title\">\r\n                <h4>{title}</h4>\r\n            </div>\r\n\r\n            <div className=\"todo-actions\">\r\n                <button onClick={() => handleCompleteTodo(id)}>{status ? \"Reset\" : \"Completed\"}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from \"react\";\r\n\r\n// styles\r\n\r\nimport \"../styles/Menu.styles.css\"\r\n\r\nconst Menu = ({handleAllView, handleCompletedView, handleResetView, completedList}) => {\r\n    return (\r\n    <div className=\"buttons-menu\">\r\n        <button onClick={()=>handleAllView(completedList)} >All</button>\r\n        <button onClick={()=>handleCompletedView(completedList)} >Completed</button>\r\n        <button onClick={()=>handleResetView(completedList)}>Reset</button>\r\n\r\n    </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Menu;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\n//Componentes\nimport Header from \"./componentes/Header.jsx\";\nimport Loader from \"./componentes/Loader.jsx\";\nimport Todo from \"./componentes/Todo\";\nimport Menu from \"./componentes/Menu\";\n\n// STYLES\nimport \"./App.css\";\n\nfunction App() {\n//STATE\nconst [todoList , setTodolist] = useState(null);\nconst [viewTotal, setViewTotal ] = useState(true);\nconst [viewCompleted, setViewCompleted] = useState(false);\nconst [viewReset, setviewReset] = useState(false);\n\n//EFFECT\nuseEffect(()=>{\n  const HandleTodoList = async () =>{\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/todos\");\n    const result = await response.json();\n    const resultTodoList = result.slice(0 ,20);\n    setTodolist(resultTodoList);  \n  };\n  HandleTodoList();\n}, []);\n\n// FUNCIONES\n\nconst handleAllView = () => {\n  setViewTotal(true);\n  setViewCompleted(false);\n  setviewReset(false);\n}\nconst handleCompletedView = () => {\n  setViewTotal(false);\n  setViewCompleted(true);\n  setviewReset(false);\n \n}\n\nconst handleResetView = () => {\n  setViewTotal(false);\n  setViewCompleted(false);\n  setviewReset(true);\n}\n\nconst handleCompleteTodo = (id) => {\n  const stateVariable = todoList.map(todo => todo.id === id ? {...todo, completed:!todo.completed}: todo);\n  setTodolist(stateVariable);\n}\n  return (\n    <>\n    <div className=\"App\">\n     \n<Header />\n<Menu handleAllView={handleAllView} handleCompletedView={handleCompletedView} \nhandleResetView={handleResetView}/>\n\n{ viewTotal === true &&(\n\ntodoList && todoList.length > 0 ? (todoList.map(singleTodo => (\n<Todo key={singleTodo.id} title={singleTodo.title} status={singleTodo.completed} handleCompleteTodo={handleCompleteTodo} id={singleTodo.id}/>\n  ))):(<Loader />))\n}\n\n{  viewCompleted === true && (\n\ntodoList && todoList.length > 0 ? (\n  (todoList.filter(ele=>ele.completed===false)).map(singleTodo => (\n<Todo key={singleTodo.id} title={singleTodo.title} status={singleTodo.completed} handleCompleteTodo={handleCompleteTodo} id={singleTodo.id}/> ))):(<Loader />))\n}\n\n{  viewReset === true && (\n\ntodoList && todoList.length > 0 ? (\n  \n  (todoList.filter(ele=>ele.completed===true)).map(singleTodo => (\n<Todo key={singleTodo.id} title={singleTodo.title} status={singleTodo.completed} handleCompleteTodo={handleCompleteTodo} id={singleTodo.id}/> ))):(<Loader />))\n}\n\n</div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}